USE ineuron;
								-- PROCEDURE --
SELECT * FROM BANK_DETAIL;

-- CREATING PROCEDURE :-
DELIMITER && 
CREATE PROCEDURE BDALL()
BEGIN
	SELECT * FROM BANK_DETAIL;
END &&
-- CALLING PROCEDURE    
CALL BDALL();   


-- CREATING PROCEDURE TO FIND DETAIL OF CUSTOMER WHO HAVE MAXIMUM BALANCE
DELIMITER &&
CREATE PROCEDURE MAXBAL()
BEGIN 
	SELECT * FROM BANK_DETAIL 
	WHERE BALANCE = (SELECT MAX(BALANCE) FROM BANK_DETAIL);  
END &&     
-- CALLING PROCUDEURE :-
CALL MAXBAL();


-- CREATING PROCEDURE TO FIND AVG BALANCE OF ALL THE CUSTOMER WHOSE JOB ROLE WILL PROVIDED AS INPUT :-
DELIMITER &&
CREATE PROCEDURE BAL_MAX_JOBROLE(IN VAL VARCHAR(30))
BEGIN
	-- 8. FIND AVG BALANCE OF ALL THE CUSTOMER WHOSE JOB ROLE IS ADMIN ;-
		SELECT AVG(BALANCE) AS JOBROLE_AVG FROM BANK_DETAIL
        WHERE JOB = VAL;
END &&        
-- CALLING PROCEDURE :- 
CALL BAL_MAX_JOBROLE('ADMIN.')

-- CREATING PROCEDURE WITH INPUTED EDUCATION AND INPUTED JOBROLE :-
DELIMITER &&
CREATE PROCEDURE SEL_EDU_JOB(IN VAL1 VARCHAR(30), IN VAL2 VARCHAR(30))
BEGIN 
	SELECT * FROM BANK_DETAIL WHERE education = VAL1 AND job = VAL2;
END &&   
-- CALLING PROCEDURE :-
CALL SEL_EDU_JOB('TERTIARY', 'RETIRED');


								-- VIEW --
                                
CREATE VIEW BANK_VIEW AS SELECT AGE, JOB, MARITAL, BALANCE, EDUCATION FROM BANK_DETAIL;
SELECT * FROM BANK_VIEW;

SELECT * FROM BANK_VIEW
		WHERE JOB = 'retired' AND AGE <= 45;
                                

